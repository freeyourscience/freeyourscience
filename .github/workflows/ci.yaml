name: Free Your Science CI/CD

on: [push]

env:
  IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/fyscience

jobs:
  elm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup elm
        uses: jorelali/setup-elm@v2
        with:
          elm-version: 0.19.1

      - name: Dependencies
        run: cd elm_frontend && npm install

      - name: Test
        run: cd elm_frontend && npx elm-test

      - name: Build
        run: cd elm_frontend && elm make src/Main.elm --output authorPapers.js

      - name: Archive Artifact
        uses: actions/upload-artifact@v2
        with:
          name: publications-for-authors-js
          path: elm_frontend/authorPapers.js
          retention-days: 1

  python-and-docker:
    needs: [ elm ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3

      - name: Build dev image from cache
        uses: whoan/docker-build-with-cache-action@v5
        with:
          image_name: freeyourscience/freeyourscience/freeyourscience-dev
          image_tag: ${{ github.sha }}
          build_extra_args: "--tag=freeyourscience-dev --target=dev"
          registry: docker.pkg.github.com
          username: erkannt # TODO: Update this to a fyscience technical user
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: publications-for-authors-js
          path: fyscience/static/

      - name: Test
        run: |
          make lint
          make test

      - name: Build prod image from cache
        if: github.ref == 'refs/heads/main'
        uses: whoan/docker-build-with-cache-action@v5
        with:
          image_name: freeyourscience/freeyourscience/freeyourscience
          image_tag: ${{ github.sha }}
          build_extra_args: "--tag=freeyourscience"
          registry: docker.pkg.github.com
          username: erkannt # TODO: Update this to a fyscience technical user
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Set up Cloud SDK
        if: github.ref == 'refs/heads/main'
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Push Image
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag freeyourscience:latest $IMAGE_NAME:latest
          docker tag freeyourscience:latest $IMAGE_NAME:${{ github.sha }}
          gcloud auth configure-docker gcr.io
          docker push $IMAGE_NAME:${{ github.sha }}
          docker push $IMAGE_NAME:latest

  deploy-dev:
    needs: [ python-and-docker ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Deploy
        run: |
          gcloud components install beta
          gcloud beta run deploy "${{ secrets.GCP_CLOUDRUN_SERVICE_DEV }}" \
            --image "$IMAGE_NAME:${{ github.sha }}" \
            --region "${{ secrets.GCP_REGION }}" \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars "UNPAYWALL_EMAIL=${{ secrets.API_EMAIL }},SHERPA_API_KEY=${{ secrets.SHERPA_API_KEY }},S2_API_KEY=${{ secrets.S2_API_KEY }}" \
            --revision-suffix ${{ github.sha }}

  deploy-prod:
    needs: [ python-and-docker ]
    if: startsWith(github.ref, 'refs/tags/latest/')
    runs-on: ubuntu-latest
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Deploy
        run: |
          gcloud components install beta
          gcloud beta run deploy "${{ secrets.GCP_CLOUDRUN_SERVICE }}" \
            --image "$IMAGE_NAME:${{ github.sha }}" \
            --region "${{ secrets.GCP_REGION }}" \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars "UNPAYWALL_EMAIL=${{ secrets.API_EMAIL }},SHERPA_API_KEY=${{ secrets.SHERPA_API_KEY }},S2_API_KEY=${{ secrets.S2_API_KEY }}" \
            --revision-suffix ${{ github.sha }}
